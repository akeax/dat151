module SkelFun where

-- Haskell module generated by the BNF converter

import AbsFun
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transIdent :: Ident -> Result
transIdent x = case x of
  Ident str  -> failure x


transProgram :: Program -> Result
transProgram x = case x of
  Prog defs  -> failure x


transDef :: Def -> Result
transDef x = case x of
  Df id ids exp  -> failure x


transExp :: Exp -> Result
transExp x = case x of
  EVar id  -> failure x
  EInt n  -> failure x
  EApp exp1 exp2  -> failure x
  EPlus exp1 exp2  -> failure x
  EMinus exp1 exp2  -> failure x
  ELess exp1 exp2  -> failure x
  ECond exp1 exp2 exp3  -> failure x
  EAbs id exp  -> failure x



